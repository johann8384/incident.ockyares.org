version: '3.8'

services:
  # PostGIS Database
  database:
    image: postgis/postgis:15-3.3
    container_name: incident_database
    environment:
      POSTGRES_DB: emergency_ops
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emergency_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - incident_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d emergency_ops"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Flask Application
  app:
    build: .
    container_name: incident_app
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: emergency_ops
      DB_USER: postgres
      DB_PASSWORD: emergency_password
      SEARCH_AREA_SIZE_M2: 40000
      TEAM_SIZE: 4
      NOMINATIM_URL: https://nominatim.openstreetmap.org
      FLASK_ENV: production
      FLASK_DEBUG: false
    volumes:
      - ./logs:/app/logs
    networks:
      - incident_network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: incident_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - incident_network
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  incident_network:
    driver: bridge