version: '3.8'

services:
  postgis:
    image: postgis/postgis:15-3.3
    container_name: emergency_postgis
    environment:
      POSTGRES_DB: emergency_ops
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --auth-local=trust --auth-host=scram-sha-256"
    secrets:
      - db_password
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only
    networks:
      - emergency_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d emergency_ops"]
      interval: 30s
      timeout: 10s
      retries: 5

  incident_app:
    build: .
    container_name: emergency_incident_app
    environment:
      DB_HOST: postgis
      DB_PORT: 5432
      DB_NAME: emergency_ops
      DB_USER: postgres
      DB_PASSWORD_FILE: /run/secrets/db_password
      EXTERNAL_DB_HOST: incident.ockyeoc.org
      FLASK_ENV: production
      SERVER_NAME: incident.ockyeoc.org
    secrets:
      - db_password
    volumes:
      - ./static/qr_codes:/app/static/qr_codes:rw
      - ./logs:/app/logs:rw
    networks:
      - emergency_network
    depends_on:
      postgis:
        condition: service_healthy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.25.3-alpine
    container_name: emergency_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/var/www/static:ro
      - ./ssl/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - emergency_network
    depends_on:
      - incident_app
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE

secrets:
  db_password:
    file: ./secrets/db_password.txt

volumes:
  postgis_data:
    driver: local

networks:
  emergency_network:
    driver: bridge
    internal: false
